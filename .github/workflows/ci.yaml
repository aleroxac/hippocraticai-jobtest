name: ci

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.generate-image-tag.outputs.image_tag }}
      env_name: ${{ steps.setup-envs.outputs.env_name }}

    env:
      APP_NAME: hippocraticai-api
      PYTHON_VERSION: "3.13"
      PYTHON_DEV_REQS_FILE_PATH: "src/requirements-dev.txt"
      DOCKER_BUILD_ARGS: |
        API_HOST=0.0.0.0
        API_PORT=8000

    steps:
      ## --- setup
      - name: checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"



      ## --- test
      - name: test
        id: test
        run: pip install -r ${PYTHON_DEV_REQS_FILE_PATH} && pytest -v



      ## --- build
      - name: gcp-auth
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: configure-docker-auth
        id: configure-docker-auth
        run: gcloud auth configure-docker gcr.io --quiet

      - name: setup-envs
        id: setup-envs
        run: |
          echo "env_name=dev" >> $GITHUB_OUTPUT
          # if [ "${GITHUB_REF_NAME}" = "main" ]; then
          #   echo "env_name=prd" >> $GITHUB_OUTPUT
          # if [ "${GITHUB_REF_NAME}" = "staging" ]; then
          #   echo "env_name=stg" >> $GITHUB_OUTPUT
          # else
          #   echo "env_name=dev" >> $GITHUB_OUTPUT
          # fi

      - name: generate-image-tag
        id: generate-image-tag
        run: |
          IMAGE_TAG="${{ steps.setup-envs.outputs.env_name }}-$(date +'%Y%m%d%H%M')"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: build-and-push-docker-image
        id: build-and-push-docker-image
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: gcr.io/aleroxac/${{ env.APP_NAME }}:${{ steps.generate-image-tag.outputs.image_tag }}
          build-args: ${{ env.DOCKER_BUILD_ARGS }}

  trigger-cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: call-cd-workflow
        id: call-cd-workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: cd
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: |
            {
              "ENV": "${{ needs.ci.outputs.env_name }}",
              "IMAGE_TAG": "${{ needs.ci.outputs.image_tag }}"
            }
